{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}!\\n  </h1>\\n  <button (click)=\\\"forward()\\\">Forward</button><br><br><br>\\n  <button (click)=\\\"backward()\\\">Backward</button><br><br><br>\\n  <button (click)=\\\"stop()\\\">Stop</button><br><br><br>\\n\\n  <div *ngIf=\\\"motor\\\">\\n\\n    <div>\\n      <label>Velosity Input: \\n        <input [(ngModel)]=\\\"motor.velocity\\\" placeholder=\\\"velocity\\\"/>\\n      </label>\\n    </div>\\n    <br><br><br>\\n    <div>\\n      <label>Angle Input: \\n        <input [(ngModel)]=\\\"motor.angle\\\" placeholder=\\\"velocity\\\"/>\\n      </label>\\n    </div>\\n    </div>\"","import { Component,OnInit } from '@angular/core';\nimport * as socketIo from 'socket.io-client';\nimport {Motor} from './motor'\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  \n  motor: Motor={\n    cmd:'stop',\n    velocity: 100,\n    angle: 90\n  };\n  \n  title = 'Robot Dashboard';\n  socket;\n  forward(): void{\n    this.motor.cmd = 'farward';\n    this.socket.emit('message',{\n      cmd: this.motor.cmd,\n      velocity: this.motor.velocity,\n      angle: this.motor.angle\n    });\n  };\n  backward(): void{\n    this.motor.cmd = 'backward';\n    this.socket.emit('message',{\n      cmd: this.motor.cmd,\n      velocity: this.motor.velocity,\n      angle: this.motor.angle\n    });\n  };\n  stop(): void{\n    this.motor.cmd = 'stop';\n    this.socket.emit('message',{\n      cmd: this.motor.cmd,\n      velocity: this.motor.velocity,\n      angle: this.motor.angle\n    });\n  };\n  ngOnInit(): void{\n    const socket = socketIo('http://192.168.43.72:4000');\n    this.socket = socket;\n    socket.on('hello',(data)=>console.log(data));\n    socket.emit('connect status',{\n      greeting: 'working !!!'\n    });\n  };\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":""}