// Generated by gencpp from file more_custom_msgs/Macro_Event.msg
// DO NOT EDIT!


#ifndef MORE_CUSTOM_MSGS_MESSAGE_MACRO_EVENT_H
#define MORE_CUSTOM_MSGS_MESSAGE_MACRO_EVENT_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>

#include <more_custom_msgs/Macro_Target.h>

namespace more_custom_msgs
{
template <class ContainerAllocator>
struct Macro_Event_
{
  typedef Macro_Event_<ContainerAllocator> Type;

  Macro_Event_()
    : idx(0)
    , current_targets()  {
    }
  Macro_Event_(const ContainerAllocator& _alloc)
    : idx(0)
    , current_targets(_alloc)  {
  (void)_alloc;
    }



   typedef int64_t _idx_type;
  _idx_type idx;

   typedef  ::more_custom_msgs::Macro_Target_<ContainerAllocator>  _current_targets_type;
  _current_targets_type current_targets;





  typedef boost::shared_ptr< ::more_custom_msgs::Macro_Event_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::more_custom_msgs::Macro_Event_<ContainerAllocator> const> ConstPtr;

}; // struct Macro_Event_

typedef ::more_custom_msgs::Macro_Event_<std::allocator<void> > Macro_Event;

typedef boost::shared_ptr< ::more_custom_msgs::Macro_Event > Macro_EventPtr;
typedef boost::shared_ptr< ::more_custom_msgs::Macro_Event const> Macro_EventConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::more_custom_msgs::Macro_Event_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::more_custom_msgs::Macro_Event_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace more_custom_msgs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': False, 'IsMessage': True, 'HasHeader': False}
// {'std_msgs': ['/opt/ros/kinetic/share/std_msgs/cmake/../msg'], 'geometry_msgs': ['/opt/ros/kinetic/share/geometry_msgs/cmake/../msg'], 'more_custom_msgs': ['/home/thilina/development/robot_ws/Robot_ws/src/more_custom_msgs/msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::more_custom_msgs::Macro_Event_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::more_custom_msgs::Macro_Event_<ContainerAllocator> const>
  : FalseType
  { };

template <class ContainerAllocator>
struct IsMessage< ::more_custom_msgs::Macro_Event_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::more_custom_msgs::Macro_Event_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::more_custom_msgs::Macro_Event_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::more_custom_msgs::Macro_Event_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::more_custom_msgs::Macro_Event_<ContainerAllocator> >
{
  static const char* value()
  {
    return "bee64d1dba84273604a8df1ddefab82a";
  }

  static const char* value(const ::more_custom_msgs::Macro_Event_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0xbee64d1dba842736ULL;
  static const uint64_t static_value2 = 0x04a8df1ddefab82aULL;
};

template<class ContainerAllocator>
struct DataType< ::more_custom_msgs::Macro_Event_<ContainerAllocator> >
{
  static const char* value()
  {
    return "more_custom_msgs/Macro_Event";
  }

  static const char* value(const ::more_custom_msgs::Macro_Event_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::more_custom_msgs::Macro_Event_<ContainerAllocator> >
{
  static const char* value()
  {
    return "int64          idx\n\
Macro_Target    current_targets\n\
================================================================================\n\
MSG: more_custom_msgs/Macro_Target\n\
string                  target_id\n\
bool                    hanging\n\
int64                  id\n\
int8                   status\n\
float64                 confidence\n\
int32                  objects_length\n\
Macro_Info              info\n\
Macro_Measurement       measurement\n\
Macro_TimePosition      position\n\
Macro_Position          velocity\n\
Macro_Position          position_uncertainty\n\
Macro_Position          velocity_uncertainty\n\
Macro_Position          predicted_velocity\n\
Macro_Position          predicted_position_uncertainty\n\
Macro_Position          predicted_velocity_uncertainty\n\
Macro_TimePosition      predicted_position\n\
Macro_TimePosition[]    position_over_time\n\
================================================================================\n\
MSG: more_custom_msgs/Macro_Info\n\
string                  first_time\n\
string                  last_time\n\
Macro_Marker            first_marker\n\
Macro_Marker            last_marker\n\
================================================================================\n\
MSG: more_custom_msgs/Macro_Marker\n\
int64           idx\n\
float64         dist\n\
================================================================================\n\
MSG: more_custom_msgs/Macro_Measurement\n\
float64         a_deg\n\
float64         r_m\n\
================================================================================\n\
MSG: more_custom_msgs/Macro_TimePosition\n\
float64         x_m\n\
float64         y_m\n\
float64         x_px\n\
float64         y_px\n\
float64         lat_deg\n\
float64         lon_deg\n\
================================================================================\n\
MSG: more_custom_msgs/Macro_Position\n\
float64         x_m\n\
float64         y_m\n\
";
  }

  static const char* value(const ::more_custom_msgs::Macro_Event_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::more_custom_msgs::Macro_Event_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.idx);
      stream.next(m.current_targets);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct Macro_Event_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::more_custom_msgs::Macro_Event_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::more_custom_msgs::Macro_Event_<ContainerAllocator>& v)
  {
    s << indent << "idx: ";
    Printer<int64_t>::stream(s, indent + "  ", v.idx);
    s << indent << "current_targets: ";
    s << std::endl;
    Printer< ::more_custom_msgs::Macro_Target_<ContainerAllocator> >::stream(s, indent + "  ", v.current_targets);
  }
};

} // namespace message_operations
} // namespace ros

#endif // MORE_CUSTOM_MSGS_MESSAGE_MACRO_EVENT_H
